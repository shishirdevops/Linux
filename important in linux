0. Orphan Process:
 technically the orphan process has the init process as its parent, it is still called an orphan process since the process that originally created it no longer exists.
 Unintentional Orphan: where in coordination with the user’s shell will try to terminate all the child processes with the SIGHUP process signal, 
 rather than letting them continue to run as orphans.
 Intentional Orphan: 
 it becomes detached from the user’s session and left running in the background; usually to allow a long-running job to complete without further user attention, 
 or to start an indefinitely running service.

Zombie(defunct): A zombie process (or defunct process) is a process that has completed execution but hasn’t been reaped by its parent process. 
As result it holds a process entry and the PID in the process table.
$ ps -axf -o pid,ppid,tty,stat,cmd
- `D` uninterruptible sleep (usually IO)
- `R` running or runnable (on run queue)
- `S` interruptible sleep (waiting for an event to complete)
- `T` stopped by job control signal
- `t` stopped by debugger during the tracing
- `W` paging (not valid since the 2.6.xx kernel)
- `X` dead (should never be seen)
- `Z` defunct ("zombie") process, terminated but not reaped by its parent

1. umask (/etc/profile)
Linux uses the following default mask and permission values: The system default permission values are 777 ( rwxrwxrwx ) for folders and 666 ( rw-rw-rw- ) for files. 
The default mask for a non-root user is 002, changing the folder permissions to 775 ( rwxrwxr-x ), and file permissions to 664 ( rw-rw-r-- ).


2. add some files to user's home while creation:
The skeleton directory is configured inside /etc/default/useradd:

SKEL=/etc/skel
You can add the config.sh file to this directory so that it is automatically added for all new users as part of their home directory.

3. login/account related things in /var/log/secure. || Keep authentication logs for both successful or failed logins,

4. To online scan new LUNs, complete the following steps:

Update the HBA driver by installing or updating the files sg3_utils-*.rpm and sg3_utils-libs-*.rpm to the latest version supplied in your Linux distribution.
Ensure that DMMP is enabled.
Ensure that the LUNS that need to be expanded are not mounted and are not used by applications.
Run sh rescan-scsi-bus.sh -r.
Run multipath -F.
Run multipath.
Run multipath -ll to view that LUN sizes are expanded successfully without a reboot.
To online expand or shrink new LUNs, complete the following steps:

Update the HBA driver by installing or updating the files sg3_utils-*.rpm and sg3_utils-libs-*.rpm to the latest version.
Ensure that DMMP is enabled.
Ensure that the LUNS that need to be expanded are not mounted and are not used by applications.
Run sh rescan-scsi-bus.sh -r.
Run multipath -F.
Run multipath.
Run multipath -ll to view that LUN sizes are expanded successfully without a reboot.

LUN set offline
On Intel based hosts running the Linux operating system, in response to errors, 
the kernel might permanently disable a LUN and log a message that states both device set offline and the specific device.
Maximum file system size limits volume size
For certain Linux kernels, the maximum file system size is less than the LUN maximum size supported by the system.
Failover errors
In certain cases, only the default settings load, and an error is generated in the log file.
Block scheduler performance
Some parameters might require adjustment to achieve optimal block scheduler performance.

4. journalctl is a command for viewing logs collected by systemd. The systemd-journald service is responsible for systemd’s log collection, 
and it retrieves messages from the kernel, systemd services, and other sources.
-b got boot || journalctl --list-boots ||  journalctl -b a09dce7b2c1c458d861d7d0f0a7c8c65
-k option to show only kernel messages
-u option to show logs for that service: (journalctl -u ssh)
-o option to display your logs in that format. For example: journalctl -o json-pretty
journald.conf control how large your logs' size can grow to when persisted on disk
journalctl with the --vacuum-time option to remove archived journal files with dates older than the specified relative time. For example, the following command will remove journals older than one year:
journalctl --vacuum-time=1years
Run journalctl with the --vacuum-files option to remove archived journal files until the specified number of files remains. For example, the following command removes all but the 10 most recent journal files:
journalctl --vacuum-files=10
